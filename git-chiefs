#!/bin/bash

IGNORE_BRANCHES="(HEAD|master|develop|production|stage)"
COMPARE_BRANCH="develop"
REMOTE_NAME="origin"
REMOTE_BRANCHES=$(git branch -r \
    | cut -c2- \
    | grep $REMOTE_NAME \
    | egrep -v $IGNORE_BRANCHES)
    
COLOR_RED="\033[0;31m"
COLOR_BLUE="\033[0;34m"
COLOR_RESET="\033[0m"

for branch in $REMOTE_BRANCHES; do
    # The easy way. Branch is ahead of the given compare branch.
    owner=$(git shortlog --no-merges --first-parent --summary \
        $REMOTE_NAME/$COMPARE_BRANCH..$branch \
        | sort -r \
        | head -n 1 \
        | cut -c8-)

    if [ "$owner" == "" ]; then
        # Damn. This is a little more complicated!
        # See: http://stackoverflow.com/a/4991675
        ancestor=$(diff -u \
            <(git rev-list --first-parent $branch) \
            <(git rev-list --first-parent $REMOTE_NAME/$COMPARE_BRANCH) \
            | sed -ne 's/^ //p' \
            | head -n 1)
        owner=$(git shortlog --first-parent --no-merges --summary \
            $ancestor..$branch \
            | sort -r \
            | head -n 1 \
            | cut -c8-)

        if [ "$owner" == "" ]; then
            echo "" > /dev/null
            # God damn. Still nothing found? 
            # I need to dive into the git internals. Maybe the whole thing
            # could be solved with one small / easy / readable way instead of
            # this "works most of the time two-way"-solution.
        else
            owner="$owner"
        fi
    fi

    # Some pretty colors
    if [ "$owner" == "" ]; then
        owner="${COLOR_RED}UNKNOWN"
    else
        owner="${COLOR_BLUE}${owner}"
    fi

    # And we're done :)
    echo -e "${branch} - ${owner}${COLOR_RESET}"
done
